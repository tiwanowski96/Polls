
trigger:
- develop
jobs:
- job: 'django_basic'
  pool:
    vmImage: 'Ubuntu-16.04'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
    maxParallel: 1
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
  - task: PythonScript@0
    displayName: 'Export project path'
    inputs:
      scriptSource: 'inline'
      script: |
        """Search all subdirectories for `manage.py`."""
        from glob import iglob
        from os import path
        # Python >= 3.6
        manage_py = next(iglob(path.join('**', 'manage.py'), recursive=True), None)
        if not manage_py:
            raise SystemExit('Could not find a Django project')
        project_location = path.dirname(path.abspath(manage_py))
        print('Found Django project in', project_location)
        print('##vso[task.setvariable variable=projectRoot]{}'.format(project_location))
  - script: |
      python -m pip install --upgrade pip setuptools wheel django
      pip install -r myProject/requirements.txt
      pip install unittest-xml-reporting
    displayName: 'Install prerequisites'

  - script: |
      pushd '$(projectRoot)'
      python manage.py test --testrunner xmlrunner.extra.djangotestrunner.XMLTestRunner --no-input
    condition: succeededOrFailed()
    displayName: 'Run tests'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: "**/TEST-*.xml"
      testRunTitle: 'Python $(PYTHON_VERSION)'